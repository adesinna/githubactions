name: Deploy website
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code from another repo
        uses: actions/checkout@v4
        with:
          repository: 'adesinna/Action_test'
          path: work

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./work

      - name: Lint code
        run: npm run lint
        working-directory: ./work

      - name: Test code
        run: npm run test
        working-directory: ./work

  build:
    needs: test  # Ensures that build runs only after test job passes
    runs-on: ubuntu-latest
    outputs: 
      script-file: ${{ steps.publisher.outputs.script-file }}
    steps:
      - name: Check out the code from another repo
        uses: actions/checkout@v4
        with:
          repository: 'adesinna/Action_test'
          path: work

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./work

      - name: Build the project
        run: npm run build  # Ensure there's a build script in package.json
        working-directory: ./work

      - name: Output js file
        id: publisher
        run: find  ./work/dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: node-artifact
          path: ./work/dist  # dist shows up when the building is done

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: node-artifact

      - name: Output artifact content
        run: pwd && ls
      
      - name: Output referencing
        run: echo "${{ needs.build.outputs.script-file }}" # Using output from build job
 
      - name: Deploy
        run: echo "Deploying..."
